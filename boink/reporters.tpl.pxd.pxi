# boink/reporters.tpl.pxd.pxi
# Copyright (C) 2018 Camille Scott
# All rights reserved.
#
# This software may be modified and distributed under the terms
# of the MIT license.  See the LICENSE file for details.
#
# WARNING: this file is automatically generated; do not modify it!
# The source template is: reporters.tpl.pxd

from libc.stdint cimport uint8_t, uint32_t, uint64_t
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.string cimport string

from boink.dbg cimport *
from boink.compactor cimport *
from boink.cdbg cimport cDBGFormat, _cDBG
from boink.events cimport EventListener, _EventListener


from boink.processors cimport *

cdef class StreamingCompactorReporter_Base(SingleFileReporter):
    cdef readonly object storage_type
    cdef readonly object shifter_type

cdef class StreamingCompactorReporter__BitStorage__DefaultShifter(StreamingCompactorReporter_Base):
    cdef unique_ptr[_StreamingCompactorReporter[_dBG[_BitStorage,_DefaultShifter]]] _s_owner
    cdef _StreamingCompactorReporter[_dBG[_BitStorage,_DefaultShifter]] *           _s_this

cdef class StreamingCompactorReporter__ByteStorage__DefaultShifter(StreamingCompactorReporter_Base):
    cdef unique_ptr[_StreamingCompactorReporter[_dBG[_ByteStorage,_DefaultShifter]]] _s_owner
    cdef _StreamingCompactorReporter[_dBG[_ByteStorage,_DefaultShifter]] *           _s_this

cdef class StreamingCompactorReporter__NibbleStorage__DefaultShifter(StreamingCompactorReporter_Base):
    cdef unique_ptr[_StreamingCompactorReporter[_dBG[_NibbleStorage,_DefaultShifter]]] _s_owner
    cdef _StreamingCompactorReporter[_dBG[_NibbleStorage,_DefaultShifter]] *           _s_this

cdef class StreamingCompactorReporter__SparseppSetStorage__DefaultShifter(StreamingCompactorReporter_Base):
    cdef unique_ptr[_StreamingCompactorReporter[_dBG[_SparseppSetStorage,_DefaultShifter]]] _s_owner
    cdef _StreamingCompactorReporter[_dBG[_SparseppSetStorage,_DefaultShifter]] *           _s_this


cdef object _make_streaming_compactor_reporter(str output_filename,
                                               StreamingCompactor_Base compactor)


# boink/processors.tpl.pxd.pxi
# Copyright (C) 2018 Camille Scott
# All rights reserved.
#
# This software may be modified and distributed under the terms
# of the MIT license.  See the LICENSE file for details.
#
# WARNING: this file is automatically generated; do not modify it!
# The source template is: processors.tpl.pxd

from libc.stdint cimport uint16_t, uint32_t, uint64_t, int64_t
from libcpp cimport bool
from libcpp.string cimport string

from boink.dbg cimport *
from boink.cdbg cimport *
from boink.events cimport EventNotifier, _EventNotifier, _EventListener
from boink.utils cimport _bstring

from boink.processors cimport *

cdef class FileProcessor_Base(FileProcessor):
    cdef readonly object storage_type
    cdef readonly object shifter_type


cdef class FileConsumer__BitStorage__DefaultShifter(FileProcessor_Base):
    cdef unique_ptr[_FileConsumer[_dBG[_BitStorage,_DefaultShifter]]] _this


cdef class DecisionNodeProcessor__BitStorage__DefaultShifter(FileProcessor_Base):
    cdef readonly str output_filename
    cdef unique_ptr[_DecisionNodeProcessor[_dBG[_BitStorage,_DefaultShifter]]] _this


cdef class StreamingCompactorProcessor__BitStorage__DefaultShifter(FileProcessor_Base):
    cdef readonly str output_filename
    cdef unique_ptr[_StreamingCompactorProcessor[_dBG[_BitStorage,_DefaultShifter]]] _this


cdef class FileConsumer__ByteStorage__DefaultShifter(FileProcessor_Base):
    cdef unique_ptr[_FileConsumer[_dBG[_ByteStorage,_DefaultShifter]]] _this


cdef class DecisionNodeProcessor__ByteStorage__DefaultShifter(FileProcessor_Base):
    cdef readonly str output_filename
    cdef unique_ptr[_DecisionNodeProcessor[_dBG[_ByteStorage,_DefaultShifter]]] _this


cdef class StreamingCompactorProcessor__ByteStorage__DefaultShifter(FileProcessor_Base):
    cdef readonly str output_filename
    cdef unique_ptr[_StreamingCompactorProcessor[_dBG[_ByteStorage,_DefaultShifter]]] _this


cdef class FileConsumer__NibbleStorage__DefaultShifter(FileProcessor_Base):
    cdef unique_ptr[_FileConsumer[_dBG[_NibbleStorage,_DefaultShifter]]] _this


cdef class DecisionNodeProcessor__NibbleStorage__DefaultShifter(FileProcessor_Base):
    cdef readonly str output_filename
    cdef unique_ptr[_DecisionNodeProcessor[_dBG[_NibbleStorage,_DefaultShifter]]] _this


cdef class StreamingCompactorProcessor__NibbleStorage__DefaultShifter(FileProcessor_Base):
    cdef readonly str output_filename
    cdef unique_ptr[_StreamingCompactorProcessor[_dBG[_NibbleStorage,_DefaultShifter]]] _this


cdef class FileConsumer__SparseppSetStorage__DefaultShifter(FileProcessor_Base):
    cdef unique_ptr[_FileConsumer[_dBG[_SparseppSetStorage,_DefaultShifter]]] _this


cdef class DecisionNodeProcessor__SparseppSetStorage__DefaultShifter(FileProcessor_Base):
    cdef readonly str output_filename
    cdef unique_ptr[_DecisionNodeProcessor[_dBG[_SparseppSetStorage,_DefaultShifter]]] _this


cdef class StreamingCompactorProcessor__SparseppSetStorage__DefaultShifter(FileProcessor_Base):
    cdef readonly str output_filename
    cdef unique_ptr[_StreamingCompactorProcessor[_dBG[_SparseppSetStorage,_DefaultShifter]]] _this


cdef object _make_file_consumer(dBG_Base graph,
                                uint64_t fine_interval,
                                uint64_t medium_interval,
                                uint64_t coarse_interval)

cdef object _make_decision_node_processor(StreamingCompactor_Base compactor,
                                          str filename, 
                                          uint64_t fine_interval,
                                          uint64_t medium_interval,
                                          uint64_t coarse_interval)

cdef object _make_streaming_compactor_processor(StreamingCompactor_Base compactor, 
                                                uint64_t fine_interval,
                                                uint64_t medium_interval,
                                                uint64_t coarse_interval)


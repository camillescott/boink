#!/usr/bin/env python

import argparse
import functools
import os
import sys

from boink.args       import add_output_interval_args
from boink.minimizers import UKHSCountSignature
from boink.processors import UKHSCountSignatureProcessor

perr = functools.partial(print, file=sys.stderr)

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-W', type=int, default=31)
    parser.add_argument('-K', type=int, default=9)
    parser.add_argument('-o', type=argparse.FileType('w'), default=sys.stdout)
    parser.add_argument('inputs', nargs='+')
    add_output_interval_args(parser)

    args = parser.parse_args()

    for filename in args.inputs:
        perr('Build signature for {0} with W={1}, W={2}...'.format(filename, args.W, args.K))

        gen = UKHSCountSignature(args.W, args.K)
        proc = UKHSCountSignatureProcessor(gen,
                                           args.fine_interval,
                                           args.medium_interval,
                                           args.coarse_interval)
        proc.process(filename)
        perr('Done.')

        gen.save(args.o, os.path.basename(filename))

if __name__ == '__main__':
    main()

#!/usr/bin/env python

import argparse
import sys

from boink.args import build_dBG_args, add_pairing_args
from boink.dbg import make_dBG
from boink.cdbg import StreamingCompactor
from boink.parsing import grouper
from boink.processors import StreamingCompactorProcessor



def parse_args():
    parser = build_dBG_args()
    add_pairing_args(parser)
    parser.add_argument('-o', dest='output_filename', default='/dev/stdout')
    parser.add_argument('--cdbg-stats-filename', default='cdbg_stats.csv')
    parser.add_argument('-i', dest='inputs', nargs='+', default=['/dev/stdin'])
    parser.add_argument('--output-interval', type=int, default=10000)
    parser.add_argument('--adjmat-prefix', default=None)

    args = parser.parse_args()
    return args


def main():
    args = parse_args()

    graph = make_dBG(args.ksize,
                     args.max_tablesize,
                     args.n_tables)
    compactor = StreamingCompactor(graph)
    processor = StreamingCompactorProcessor(compactor,
                                            args.cdbg_stats_filename
                                            args.adjmat_prefix,,
                                            args.output_interval)
    if args.pairing_mode == 'split':
        _samples = grouper(2, args.inputs)
    else:
        _samples = args.inputs

    for sample in _samples:
        if args.pairing_mode == 'split':
            processor.process(*sample)
        else:
            processor.process(sample)

    compactor.write_unitigs(args.output_filename)

    if args.savegraph:
        graph.save(args.savegraph)



if __name__ == '__main__':
    main()

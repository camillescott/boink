#!/usr/bin/env python3

from __future__ import print_function

import argparse
import sys
import khmer
import textwrap
import os

import pandas as pd
from khmer import Countgraph, load_countgraph
from khmer.kfile import check_input_files
from khmer.khmer_args import (sanitize_help, build_counting_args,
                              add_loadgraph_args, create_countgraph)

from boink.analysis import sequence_apply
from boink.stats import FUNCTIONS
from boink import stats


def get_parser():
    epilog = """\

    """
    parser = build_counting_args()
    parser.add_argument('-o', dest='output', type=argparse.FileType('w'), 
                        default=sys.stdout)
    parser.add_argument('--function', choices=FUNCTIONS, 
                        default='KmerDegreeBiasFunction')
    
    parser.add_argument('input_sequence_filenames', help='The name of the input'
                        ' FAST[AQ] sequence file.', nargs='+')
    add_loadgraph_args(parser)

    return parser

def do_apply(filenames, graph, FuncType, consume, *funcargs, **funckwds):
    func = FuncType(graph, *funcargs, **funckwds)
    sequence_apply(filenames, func, consume=consume, *funcargs, **funckwds)
    return func

def main():
    args = get_parser().parse_args()
    consume = False

    if args.loadgraph:
        graph = load_countgraph(args.loadgraph)
    else:
        graph = create_countgraph(args)
        consume = True

    FuncType = getattr(stats, args.function)
    func = do_apply(args.input_sequence_filenames, graph, FuncType, consume)
    func.save(args.output)

if __name__ == '__main__':
    main()

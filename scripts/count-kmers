#!/usr/bin/env python

import argparse
import statistics
import sys

#from khmer._oxli.parsing import FastxParser
import screed

from boink.args import (build_dBG_args, add_pairing_args)
from boink.dbg import make_dBG
from boink.processors import make_file_consumer


def parse_args():
    parser = build_dBG_args()
    parser.add_argument('-o', dest='output_filename', default='/dev/stdout')
    parser.add_argument('-i', dest='inputs', nargs='+', default=['/dev/stdin'])
    parser.add_argument('--interval', dest='output_interval', default=10000,
                        type=int)

    args = parser.parse_args()
    return args

def main():
    args = parse_args()
    graph = make_dBG(args.ksize,
                     args.max_tablesize,
                     args.n_tables,
                     storage='_' + args.storage_type)

    processor = make_file_consumer(graph, args.output_interval)
    for filename in args.inputs:
        processor.process(filename)
    
    with open(args.output_filename, 'w') as fp:
        fp.write('name\tmax\tmedian\tstart\tend\tinternal_max\n')
        for filename in args.inputs:
            for record in screed.open(filename):
                counts = graph.get_counts(record.sequence)
                internal = None
                if len(counts) > 2:
                    internal = max(counts[1:-1])
                fp.write('"{0}"\t{1}\t{2}\t{3}\t{4}\t{5}\n'.format(record.name,
                                            max(counts),
                                            statistics.median(counts),
                                            counts[0],
                                            counts[-1],
                                            internal))

if __name__ == '__main__':
    main()

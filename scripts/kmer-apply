#!/usr/bin/env python3

from __future__ import print_function

import argparse
import sys
import khmer
import textwrap
import os

import pandas as pd
from khmer import Countgraph
from khmer.kfile import check_input_files
from khmer.khmer_args import (sanitize_help, KhmerArgumentParser)

from boink.analysis import kmer_apply
from boink.stats import KmerDegreeBiasFunction


def get_parser():
    epilog = """\

    """
    parser = argparse.ArgumentParser()

    parser.add_argument('input_count_graph_filename', help='The name of the'
                        ' input k-mer countgraph file.')
    parser.add_argument('input_sequence_filenames', help='The name of the input'
                        ' FAST[AQ] sequence file.', nargs='+')
    parser.add_argument('-o', dest='output', type=argparse.FileType('w'), default=sys.stdout)
    
    return parser

def main():
    args = get_parser().parse_args()
    infiles = [args.input_count_graph_filename] + args.input_sequence_filenames
    for infile in infiles:
        check_input_files(infile, False)
    graph = khmer.load_countgraph(args.input_count_graph_filename)
    func = KmerDegreeBiasFunction(graph)
    kmer_apply(args.input_sequence_filenames, func)

    func.save(args.output)

if __name__ == '__main__':
    main()
